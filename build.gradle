plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'maven-publish'
    id "eclipse"
    id "com.github.johnrengelman.shadow" version "7.0.0"
    id "org.beryx.jlink" version "2.24.2"
}

group 'de.geolykt.starloader'
def archivesBaseName = 'launcher'
version '3.0.0'

// Our classloader require Java9+ in order to work, but since noone should be using Java 9 and 10, it was bumped all the way to Java 11
sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '11'

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        name = 'Geolykt'
        url = 'https://geolykt.de/maven/'
    }
}

java {
    modularity.inferModulePath.set(true)
}

dependencies {

    // I am very well aware that this is just a reference implementation, but it has served me well in the past; so I prefer it over any other implementation
    api 'org.json:json:20210307'

    implementation group: 'de.geolykt.starloader', name: 'tableLayout', version: '4.4.0'

    // https://mvnrepository.com/artifact/org.jetbrains/annotations
    api group: 'org.jetbrains', name: 'annotations', version: '22.0.0'

    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    api 'com.google.code.gson:gson:2.8.8'

    // Required for mixins
    api 'com.google.guava:guava:30.1.1-jre'

    // Code modification
    api "org.ow2.asm:asm:9.2"
    api "org.ow2.asm:asm-tree:9.2"
    api "org.ow2.asm:asm-analysis:9.2"
    api "org.ow2.asm:asm-util:9.2"
    api "org.ow2.asm:asm-commons:9.2"
    api "de.geolykt.starloader:mixin:0.8.4"
    api "de.geolykt.starloader:access-widener:2.1.0"

    // Logging
    // SLF4J is the base logger for most libraries, therefore we should provide integration to it
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    api 'org.slf4j:slf4j-api:2.0.0-alpha5'

    // https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
    // recaf's attach (which I use to inspect bytecode) breaks on slf4j-simple, so we are using logback in the meantime
	// We formerly used Log4J, so eventually we should go back to it as we still package the config files for it
    implementation 'ch.qos.logback:logback-classic:1.3.0-alpha10'

    // api 'org.slf4j:slf4j-simple:2.0.0-alpha5'
}

jar {
    manifest {
        attributes 'Main-Class': 'de.geolykt.starloader.launcher.Launcher', 'Multi-Release': true
    }
}

shadowJar {
    mergeServiceFiles()
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

application {
    mainClass = 'de.geolykt.starloader.launcher.Launcher'
    mainModule = 'de.geolykt.starloader.launcher'
}

publishing {
    publications {
        plugin(MavenPublication) { publication ->
            groupId project.group
            artifactId project.archivesBaseName
            version project.version

            from components['java']

            artifact sourcesJar
            artifact javadocJar
        }
    }
    repositories {
        mavenLocal()
    }
}

jlink {
    options = ['--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'StarloaderLauncher'
    }
    jpackage {
        installerOptions = [
            '--description', 'Launcher for modded galimulator. Beware that while this feature is present in official sources, it has significant drawbacks compared to the traditional SLC + SLL install.',
            '--copyright', 'Copyright 2021-2021 Geolykt',
            '--vendor', 'Starloader-project',
            '--license-file', 'LICENSE'
        ]
        // Note: you need to have rpm-build installed if you wish to create RPM builds
        // Creating .deb packages requires dpkg and fakeroot to be installed
        installerType = project.findProperty('installerType') // Passed from the commandLine (example: -PinstallerType=rpm)
        if (installerType == 'msi') {
            imageOptions += ['--icon', 'src/main/resources/icon.ico']
            installerOptions += [
                '--win-per-user-install', '--win-dir-chooser',
                '--win-menu', '--win-shortcut'
            ]
        }
        if (installerType in ['deb', 'rpm']) {
            imageOptions += ['--icon', 'src/main/resources/icon.png']
            installerOptions += [
                '--linux-menu-group', 'Game;Simulation;Java;',
                '--linux-app-category', 'games', // SLL also falls under 'java', not sure whether we can have multiple categories
                '--linux-shortcut'
            ]
        }
        if (installerType == 'deb') {
            installerOptions += [
                '--linux-deb-maintainer', 'admin@geolykt.de'
            ]
        }
        if (installerType == 'rpm') {
            installerOptions += [
                '--linux-rpm-license-type', 'ASL 2.0' // aka Apache 2.0
            ]
        }
    }
}

jpackage {
    doFirst {
        project.getProperty('installerType') // throws exception if its missing
    }
}
